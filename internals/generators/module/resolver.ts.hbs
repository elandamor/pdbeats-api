/**
 *
 * Resolvers for {{ properCase name }}
 *
 */

import { PubSub } from 'graphql-subscriptions';
import { Context } from '../../utils';
import { {{ properCase name }}Service } from './{{ name }}.service';

const pubsub = new PubSub();
const service = new {{ properCase name }}Service();

export default {
  Mutation: {
    add{{properCase name}}: ({ input }, context: Context, info) => service.create(input, context, info),
    delete{{properCase name}}: ({ id }, context: Context) => service.delete(id, context),
    edit{{properCase name}}: ({ input }, context: Context, info) => service.edit(input, context, info),
  },
  Query: {
    {{name}}: ({ id }, context: Context, info) => service.findOne(id, context, info),
    {{name}}s: ({ input }, context: Context, info) => service.findMany(input, context, info),
  },
  Subscription: {
    {{name}}: () => pubsub.asyncIterator('{{constantCase name}}_CREATED')
  }
};

